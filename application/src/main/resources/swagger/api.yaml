openapi: '3.0.1'

info:
  version: '1.0.0'
  title: 'My API title'
  description: 'Awesome description'

paths:
  /application:
    post:
      summary: Get 4 loan offers
      operationId: prescore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplicationRequestDTO'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanOffers'
        400:
          description: Invalid input data

  /application/offer:
    put:
      summary: Choose offer
      operationId: Set offer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanOfferDTO'
      responses:
        200:
          description: OK
        400:
          description: Invalid input data

components:
  schemas:
    LoanApplicationRequestDTO:
      type: object
      properties:
        amount:
          type: number
          minimum:  10000
        term:
          type: integer
          minimum: 6
        firstName:
          type: string
          minLength: 2
          maxLength: 30
        lastName:
          type: string
          minLength: 2
          maxLength: 30
        middleName:
          type: string
          minLength: 2
          maxLength: 30
        email:
          type: string
          pattern: ^[\w\.]{2,50}@[\w\.]{2,20}
          example: hellotest@mail.ru
        birthdate:
          type: string
          format: date
          example: 2000-07-26
          x-extra-annotation:  "@com.loanservice.application.validation.Adult"
        passportSeries:
          type: string
          pattern: \d{4}
        passportNumber:
          type: string
          pattern: \d{6}

    LoanOfferDTO:
      type: object
      properties:
        applicationId:
          type: integer
          format: int64
        requestedAmount:
          type: number
        totalAmount:
          type: number
        term:
          type: integer
        monthlyPayment:
          type: number
        rate:
          type: number
        isInsuranceEnabled:
          type: boolean
        isSalaryClient:
          type: boolean

    LoanOffers:
      type: array
      items:
        $ref: "#/components/schemas/LoanOfferDTO"

    ScoringDataDTO:
      type: object
      properties:
        amount:
          type: number
          minimum: 10000
        term:
          type: integer
          minimum: 6
        firstName:
          type: string
          minLength: 2
          maxLength: 30
        lastName:
          type: string
          minLength: 2
          maxLength: 30
        middleName:
          type: string
          minLength: 2
          maxLength: 30
        gender:
          $ref: "#/components/schemas/Gender"
        birthdate:
          type: string
          format: date
          x-extra-annotation: "@com.loanservice.application.validation.Adult"
        passportSeries:
          type: string
          pattern: \d{4}
        passportNumber:
          type: string
          pattern: \d{6}
        passportIssueDate:
          type: string
          format: date
        passportIssueBranch:
          type: string
        maritalStatus:
          $ref: "#/components/schemas/MaritalStatus"
        dependentAmount:
          type: integer
        employment:
          $ref: "#/components/schemas/EmploymentDTO"
        account:
          type: string
        isInsuranceEnabled:
          type: boolean
        isSalaryClient:
          type: boolean

    CreditDTO:
      type: object
      properties:
        amount:
          type: number
        term:
          type: integer
        monthlyPayment:
          type: number
        rate:
          type: number
        psk:
          type: number
        isInsuranceEnabled:
          type: boolean
        isSalaryClient:
          type: boolean
        paymentSchedule:
          type: array
          items:
            $ref: "#/components/schemas/PaymentScheduleElement"

    EmploymentDTO:
      type: object
      properties:
        employmentStatus:
          $ref: "#/components/schemas/EmploymentStatus"
        employerINN:
          type: string
        salary:
          type: number
        position:
          $ref: "#/components/schemas/Position"
        workExperienceTotal:
          type: integer
        workExperienceCurrent:
          type: integer

    PaymentScheduleElement:
      type: object
      properties:
        number:
          type: integer
        date:
          type: string
          format: date
        totalPayment:
          type: number
        interestPayment:
          type: number
        debtPayment:
          type: number
        remainingDebt:
          type: number

    Position:
      type: string
      enum:
        - Default
        - Middle manager
        - Top manager

    Gender:
      type: string
      enum:
        - Male
        - Female
        - Nonbinary

    EmploymentStatus:
      type: string
      enum:
        - Business owner
        - Self-employed
        - Employed
        - Unemployed

    MaritalStatus:
      type: string
      enum:
        - Married
        - Divorced
        - Single

